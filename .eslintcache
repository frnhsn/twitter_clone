[{"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/App.js":"1","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/auth.service.js":"2","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/user.service.js":"3","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowList.component.js":"4","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetDetail.component.js":"5","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/reportWebVitals.js":"6","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/profile.component.js":"7","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/settings.component.js":"8","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/login.component.js":"9","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetList.component.js":"10","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/leftSidebar.component.js":"11","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowDetail.component.js":"12","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/mainWrapper.component.js":"13","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/profileHeader.component.js":"14","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/topheader.component.js":"15","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/home.component.js":"16","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/newTweet.component.js":"17","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/tweet.service.js":"18","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/index.js":"19","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/authRoute.component.js":"20","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/privateRoute.component.js":"21","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/register.component.js":"22"},{"size":1708,"mtime":1611328893814,"results":"23","hashOfConfig":"24"},{"size":4698,"mtime":1611329859491,"results":"25","hashOfConfig":"24"},{"size":13688,"mtime":1611328893933,"results":"26","hashOfConfig":"24"},{"size":1014,"mtime":1611328893910,"results":"27","hashOfConfig":"24"},{"size":4127,"mtime":1611328893899,"results":"28","hashOfConfig":"24"},{"size":362,"mtime":1611328893920,"results":"29","hashOfConfig":"24"},{"size":1975,"mtime":1611330278050,"results":"30","hashOfConfig":"24"},{"size":5233,"mtime":1611328893852,"results":"31","hashOfConfig":"24"},{"size":3886,"mtime":1611329781098,"results":"32","hashOfConfig":"24"},{"size":321,"mtime":1611328893903,"results":"33","hashOfConfig":"24"},{"size":1376,"mtime":1611328893874,"results":"34","hashOfConfig":"24"},{"size":2227,"mtime":1611328893906,"results":"35","hashOfConfig":"24"},{"size":1067,"mtime":1611328893831,"results":"36","hashOfConfig":"24"},{"size":3471,"mtime":1611330053346,"results":"37","hashOfConfig":"24"},{"size":4850,"mtime":1611328893888,"results":"38","hashOfConfig":"24"},{"size":1272,"mtime":1611328893841,"results":"39","hashOfConfig":"24"},{"size":2047,"mtime":1611328893881,"results":"40","hashOfConfig":"24"},{"size":8166,"mtime":1611328893931,"results":"41","hashOfConfig":"24"},{"size":563,"mtime":1611392779357,"results":"42","hashOfConfig":"24"},{"size":609,"mtime":1611328893858,"results":"43","hashOfConfig":"24"},{"size":611,"mtime":1611328893868,"results":"44","hashOfConfig":"24"},{"size":10443,"mtime":1611328893855,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13spa3z",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/App.js",[],["102","103"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/auth.service.js",["104"],"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\n\nconst API_URL = 'http://127.0.0.1:8000/api/auth/';\n\nexport default class AuthService {\n    static async login(username, password) {\n        return axios.post(API_URL + 'jwt/create/', {\n            username: username,\n            password: password\n        }).then(response => {\n            if (response.data.access) {\n                let token = response.data.access;\n                let decodedToken = jwt.decode(token);\n                var result = {\n                    id: decodedToken.user_id,\n                    username: username,\n                    token_exp: decodedToken.exp,\n                    access_token: response.data.access,\n                    refresh_token: response.data.refresh\n                };\n                localStorage.setItem('user', JSON.stringify(result));\n                return result;\n            } else {\n                throw Error('Login failed.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Login failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Login failed HTTP request. ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Login failed: ${error.message}`);\n              }\n              throw Error(`Login failed: ${error.config}`);\n        })\n    }\n\n    static async register(username, email, first_name, last_name, password, re_password) {\n        return axios.post(API_URL + 'users/', {\n            username, email, first_name, last_name, password, re_password\n        })\n        .then(response => {\n            if (response.status === 201) {\n                return { data: response.data };\n            } else {\n                throw Error(`Register faild with HTTP ${response.status}: ${response.data}`);\n            }\n        }).catch(error => {\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                if (error.response.status === 400) {\n                    let data = error.response.data;\n                    if (data.username) {\n                        return { \n                            error: true, \n                            message: { field: 'username', value: data.username[0]},\n                        }\n                    }\n                    else if (data.email) {\n                        return { \n                            error: true, \n                            message: { field: 'email', value: data.email[0]},\n                        }\n                    }\n                    else if (data.password) {\n                        return { \n                            error: true, \n                            message: { field: 'password', value: data.password[0]},\n                        }\n                    }\n                } else {\n                    throw Error(`Register failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Register failed HTTP request ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Register failed: ${error.message}`);\n              }\n              throw Error(`Register failed: ${error.config}`);\n        })\n    }\n\n    static logout() {\n        localStorage.removeItem('user');\n    }\n\n    static getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    static isAuthenticated() {\n        let user = this.getCurrentUser();\n        let dateNow = new Date();\n\n        if (user && (dateNow.getTime()/1000) < user.token_exp) {\n            return true;\n        }\n        \n        this.logout();\n        return false;\n    }\n\n};",["105","106"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/user.service.js",["107","108"],"import axios from 'axios';\nimport AuthService from './auth.service.js';\n\nconst USER = AuthService.getCurrentUser();\nconst API_URL = 'http://localhost:8000/api/profile/';\nconst OPTIONS = {\n    method: 'POST',\n    headers: { \n      'Content-Type': 'application/json', \n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + (USER && USER.access_token || ''),\n    },\n} \n\nexport default class UserService {\n    static async getProfile(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 404) {\n                    return {error: true, message: error.response.data}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async getTweets(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/tweets/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async me() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async updateProfile(first_name, last_name, bio, location) {\n        let method = (first_name && last_name && bio && location && bio) ? 'put' : 'patch';\n        \n        return axios({\n            method: method,\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers,\n            data: {\n                first_name,\n                last_name,\n                bio,\n                location\n            }\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to update profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to update profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed update profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to update profile ${error.config}`);\n              }\n        })\n    }\n\n    static async whoToFollow() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'who-to-follow',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error(`Failed to fetch who to follow ${response.response.status}: ${response.response.data}`);\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch who to follow ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch who to follow ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch who to follow ${error.config}`);\n              }\n        })\n    }\n\n    static async followProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/follow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to follow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to follow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed follow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to follow profile ${error.config}`);\n              }\n        })\n    };\n\n    static async unfollowProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/unfollow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to unfollow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to unfollow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed unfollow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to unfollow profile ${error.config}`);\n              }\n        })\n    }\n\n    static async following(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/following/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get following list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get following list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get following list ${error.request}`);\n              } else {\n                throw Error(`Failed to get following list ${error.config}`);\n              }\n        })\n    };\n\n    static async followers(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/followers/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get followers list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get followers list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get followers list ${error.request}`);\n              } else {\n                throw Error(`Failed to get followers list ${error.config}`);\n              }\n        })\n    };\n};","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowList.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetDetail.component.js",["109","110","111","112","113","114","115","116"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/reportWebVitals.js",[],["117","118"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/profile.component.js",[],["119","120"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/settings.component.js",["121","122","123","124","125","126"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport UserService from '../../services/user.service.js';\n\nfunction SettingsComponent(props) {\n  const { register, handleSubmit, setValue, errors } = useForm();\n  const [submitted, setSubmitted] = useState(false);\n  const mounted = useRef();\n\n  useEffect(() => {\n    if (!mounted.current) {\n      // Component did mount\n      updateForm();\n      mounted.current = true;\n      setSubmitted(false);\n    } else {\n      // Component did update\n    }\n  });\n\n  const updateForm = () => {\n    UserService.me().then(response => {\n      if (!response.error) {\n        setValue('first_name', response.data['first_name']);\n        setValue('last_name', response.data['last_name']);\n        setValue('location', response.data['location']);\n        setValue('bio', response.data['bio']);\n      }\n    });\n  }\n\n  const onSubmit = data => {\n    const {first_name, last_name, location, bio} = data;\n    UserService.updateProfile(first_name, last_name, bio, location)\n    .then(() => {\n      updateForm();\n      setSubmitted(true);\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  const onClick = event => {\n    console.log()\n  }\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-lg-12 col-md-12 bg-white\">\n        <div className=\"p-3\">\n          <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              {/* First name field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"first_name\">First Name</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"first_name\" \n                    name=\"first_name\"\n                    type=\"text\" \n                    placeholder={\"First Name\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your first name\"\n                      }})}/>\n                    {errors.first_name && errors.first_name.message &&\n                    <span className=\"text-danger\">{errors.first_name.message}</span>}\n                </div>\n              </div>\n              {/* Last Name Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"last_name\">Last Name</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"last_name\" \n                    name=\"last_name\"\n                    type=\"text\" \n                    placeholder={\"Last Name\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your last name\"\n                      }})}/>\n                    {errors.last_name && errors.last_name.message &&\n                    <span className=\"text-danger\">{errors.last_name.message}</span>}\n                </div>\n              </div>\n              {/* Location Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"location\">Location</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"location\" \n                    name=\"location\"\n                    type=\"text\" \n                    placeholder={\"Location\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your location\"\n                      }})}/>\n                    {errors.location && errors.location.message &&\n                    <span className=\"text-danger\">{errors.location.message}</span>}\n                </div>\n              </div>\n              {/* Bio Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"location\">Bio</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"bio\" \n                    name=\"bio\"\n                    type=\"text\" \n                    placeholder={\"Bio\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your biography\"\n                      }})}/>\n                    {errors.bio && errors.bio.message &&\n                    <span className=\"text-danger\">{errors.bio.message}</span>}\n                </div>\n              </div>\n              {/* Submit button section */}\n              <div className=\"col-lg-12 text-center mt-5\">\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-block btn-dark\"\n                  disabled={submitted}>\n                    {submitted && 'Saved' || 'Save'}\n              </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>      \n  )\n}\n\nexport default SettingsComponent;\n  ","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/login.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetList.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/leftSidebar.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowDetail.component.js",["127","128","129","130"],"import { useState } from \"react\";\nimport UserService from '../../services/user.service.js';\n\nconst separator = {\n    borderTop: \"1px solid var(--light)\",\n  };\n\nfunction WhoToFollowDetailComponent(props) {\n    const [followState, setFollowState] = useState(props.profile.already_followed);\n    const [followStyle, setFollowStyle] = useState(props.profile.already_followed && 'btn-success' || 'btn-primary');\n    const [followCaption, setFollowCaption] = useState(props.profile.already_followed && 'Following' || 'Follow');\n\n    function handleFollow() {\n        // Unfollow profile\n        if (followState) {\n            UserService.unfollowProfile(props.profile.username).then(response => {\n                if (!response.error) {\n                    setFollowStyle('btn-primary');\n                    setFollowCaption('Follow');\n                    setFollowState(response.data.already_followed);\n                }\n            });\n            \n        // Follow profile\n        } else {\n            UserService.followProfile(props.profile.username).then(response => {\n                if (!response.error) {\n                    setFollowStyle('btn-success');\n                    setFollowCaption('Following');\n                    setFollowState(response.data.already_followed);\n                }\n            });\n        }\n    }\n\n    return (\n        <div className=\"card-body\" style={separator}>\n            {/* Tweet content */}\n            <div className=\"row\">\n            <div className=\"col-3\">\n                <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n            </div>\n            <div className=\"col-5\">\n                <h5 className=\"text-dark\"><a href={\"profile/\" + props.profile.username}>{\n                    props.profile.first_name + ' ' + props.profile.last_name\n                }</a></h5>\n                <h5 className=\"text-dark\">@{props.profile.username}</h5>    \n            </div>\n            <div className=\"col-4 text-center mx-0\">\n                <button className={followStyle + \" btn btn-rounded\"} onClick={handleFollow}>{followCaption}</button>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default WhoToFollowDetailComponent;","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/mainWrapper.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/profileHeader.component.js",["131","132","133","134","135","136"],"\nimport { useState } from \"react\";\nimport WhoToFollowDetailComponent from '../sections/whoToFollowDetail.component.js';\n\nfunction ProfileHeaderComponent(props) {\n    const [ modal, setModal ] = useState({\n        type: undefined,\n        content: []\n    });\n\n    function toggleModal(modalType) {\n        const content = (modalType === 'Followers') ? props.followers : props.following;\n        setModal({...modal, type: modalType, content: content});\n    }\n    \n    return (\n        <div className=\"card text-center\">\n            <div className=\"card-body\">\n                <div className=\"row justify-content-center my-3\">\n                    <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n                </div>\n                <h3 className=\"card-title\">{props.profile && \n                    (props.profile.first_name + ' ' + props.profile.last_name)}</h3>\n                <h4 className=\"card-subtitle\">{props.profile && `@${props.profile.username}`}</h4>\n                <small className=\"badge badge-pill badge-info form-text text-white\">{props.profile && props.profile.location}</small>\n                <h6 className=\"card-text my-3\">{props.profile && props.profile.bio}</h6>\n                <div className=\"row justify-content-center my-3\">\n                    <a href=\"\" className=\"col-2\" data-toggle=\"modal\" data-target=\"#scrollable-modal\" onClick={() => toggleModal('Following')}>\n                        <h2 className=\"text-dark mb-1 font-weight-small\">{props.profile && props.profile.following_count || 0}</h2>\n                        <h6 className=\"text-muted font-weight-normal mb-0 w-100 text-truncate\">Following</h6>\n                    </a>\n                    <a href=\"\" className=\"col-2\" data-toggle=\"modal\" data-target=\"#scrollable-modal\" onClick={() => toggleModal('Followers')}>\n                        <h2 className=\"text-dark mb-1 font-weight-small\">{props.profile && props.profile.follower_count || 0}</h2>\n                        <h6 className=\"text-muted font-weight-normal mb-0 w-100 text-truncate\">Followers</h6>\n                    </a>\n                </div>\n            </div>\n            {/* Modal */}\n            <div className=\"modal fade text-left\" id=\"scrollable-modal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"scrollableModalTitle\" aria-hidden=\"true\" style={{display: 'none'}}>\n                <div className=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"scrollableModalTitle\">{modal.type && modal.type}</h5>\n                        <button type=\"button\" onClick={toggleModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className='row'>\n                            {modal.content && modal.content.map(item => {\n                                return <WhoToFollowDetailComponent profile={item} key={item.user_id}/>\n                            })}\n                        </div>\n                    </div>\n                    </div>  {/* /.modal-content */}\n                </div>{/* /.modal-dialog */}\n                </div>\n            </div>\n\n    )\n}\n\nexport default ProfileHeaderComponent;","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/topheader.component.js",["137"],"import { useEffect, useState } from 'react';\nimport UserService from '../../services/user.service.js';\n\nexport default function TopHeaderComponent(props) {\n    const [user, setUser] = useState();\n    \n    useEffect(() => {\n        UserService.me().then((response) => {\n            setUser(response.data);\n        })\n    }, [])\n\n    return (\n       <header className=\"topbar\" data-navbarbg=\"skin6\">\n            <nav className=\"navbar top-navbar navbar-expand-md\">\n                <div className=\"navbar-header\" data-logobg=\"skin6\">\n                {/* This is for the sidebar toggle which is visible on mobile only */}\n                <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"/\"><i className=\"ti-menu ti-close\" /></a>\n                        {/* Logo */}\n                        <div className=\"navbar-brand\">\n                    {/* Logo icon */}\n                    <a href=\"/\">\n                    <b className=\"logo-icon\">\n                        {/* Dark Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"light-logo\" />\n                    </b>\n                    {/*End Logo icon */}\n                    {/* Logo text */}\n                    <span className=\"logo-text\">\n                        {/* dark Logo text */}\n                        <img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo text */}\n                        <img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\n                    </span>\n                    </a>\n                </div>\n                        {/* End Logo */}\n                        {/* Toggle which is visible on mobile only */}\n                        <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"/\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\" /></a>\n                </div>\n                    {/* End Logo */}\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\n                        {/* toggle and nav items */}\n                        <ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\n                            {/* Header title */}\n                            <li className=\"nav-item\">\n                                <h3 className=\"text-dark mx-3\" >{props.headerTitle}</h3>\n                            </li>\n                         </ul>\n                        {/* Right side toggle and nav items */}\n                        <ul className=\"navbar-nav float-right\">\n                            {/* Search */}\n                            <li className=\"nav-item d-none d-md-block\">\n                    <a className=\"nav-link\" href=\"/\">\n                        <form>\n                        <div className=\"customize-input\">\n                            <input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <i className=\"form-control-icon\" data-feather=\"search\" />\n                        </div>\n                        </form>\n                    </a>\n                    </li>\n                            {/* User profile and search */}\n                            <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"/\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={40} />\n                        <span className=\"ml-2 d-none d-lg-inline-block\"><span className=\"text-dark\">{user && user.first_name}</span> <i data-feather=\"chevron-down\" className=\"svg-icon\" /></span>\n                    </a>\n                    <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\n                        <a className=\"dropdown-item\" href=\"/profile\"><i data-feather=\"user\" className=\"svg-icon mr-2 ml-1\" />My Profile</a>\n                        <a className=\"dropdown-item\" href=\"/settings\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />Account Setting</a>\n                        <a className=\"dropdown-item\" href=\"/logout\"><i data-feather=\"power\" className=\"svg-icon mr-2 ml-1\" />Logout</a>\n                    </div>\n                    </li>\n                            {/* User profile and search */}\n                            </ul>\n                </div>\n            </nav>\n            </header>\n    )\n}","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/home.component.js",["138"],"\nimport { useState, useEffect } from 'react';\nimport NewTweetComponent from '../sections/newTweet.component.js';\nimport TweetListComponent from '../sections/tweetList.component.js';\nimport WhoToFollowListComponent from '../sections/whoToFollowList.component.js';\nimport TweetService from '../../services/tweet.service.js';\n\nfunction HomeComponent(props) {\n  const [tweets, setTweets] = useState([]);\n\n  const handleNewTweet = (message, image=null) => {\n    TweetService.newTweet(message).then(response =>  {\n      if (!response.error) {\n        setTweets([response.data, ...tweets]);\n      }\n    })\n  }\n    \n  // When mount completed\n  useEffect(() => {\n    TweetService.getFeeds().then(response => {\n      if (!response.error) {\n        setTweets(tweets.concat(...response.data));\n      } else {\n        alert(response.message);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  }, [])\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-md-8\">\n          <NewTweetComponent handleNewTweet={handleNewTweet}/>\n          <TweetListComponent tweets={tweets}/>\n      </div>\n      {/* Right sidebar */}\n      <div className=\"right-sidebar col-md-4\">\n        <WhoToFollowListComponent/>\n      </div>\n    </div>\n    )\n}\n\nexport default HomeComponent;\n","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/newTweet.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/tweet.service.js",["139","140"],"import axios from 'axios';\nimport AuthService from \"./auth.service.js\";\n\nconst USER = AuthService.getCurrentUser();\nconst API_URL = 'http://localhost:8000/api/';\nconst OPTIONS = {\n    method: 'POST',\n    headers: { \n      'Content-Type': 'application/json', \n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + (USER && USER.access_token || ''),\n    },\n} \n\nclass TweetService {\n    static async getFeeds() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'feeds/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404) return {\n                error: true, \n                message: \"Tweet not found\", \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to fetch tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async getTweeet(id) {\n        return axios({\n            method: 'get',\n            url: API_URL + 'tweet/' + id,\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404) return {\n                error: true, \n                message: \"Tweet not found\", \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to fetch tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async newTweet(content = '', image = null) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweets/',\n            headers: OPTIONS.headers,\n            data: { content, image } \n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            }\n            else if (error.response.status === 400 ) {\n                return {\n                    error: true, \n                    message: Object.values(error.response.data).join('. '), \n                    status: error.response.status,\n                    data: null\n                }\n            }\n            return {\n                error: true, \n                message: \"Failed to post new tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async likeTweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/like/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404 ) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to like tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async unlikeTweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/unlike/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404 ) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to unlike tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async retweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/retweet/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (Math.round(error.response.status/100) === 4) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to perfom retweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async removeTweet(id) {\n        return axios({\n            method: 'delete',\n            url: API_URL + 'tweet/' + id,\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (Math.round(error.response.status/100) === 4) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to remove tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n}\n\nexport default TweetService;","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/index.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/authRoute.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/privateRoute.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/register.component.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":45,"column":15,"nodeType":"147","messageId":"148","endLine":45,"endColumn":60},{"ruleId":"141","replacedBy":"149"},{"ruleId":"143","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":11,"column":42,"nodeType":"153","messageId":"154","endLine":11,"endColumn":44},{"ruleId":"151","severity":1,"message":"152","line":11,"column":63,"nodeType":"153","messageId":"154","endLine":11,"endColumn":65},{"ruleId":"151","severity":1,"message":"152","line":22,"column":77,"nodeType":"153","messageId":"154","endLine":22,"endColumn":79},{"ruleId":"151","severity":1,"message":"152","line":22,"column":93,"nodeType":"153","messageId":"154","endLine":22,"endColumn":95},{"ruleId":"151","severity":1,"message":"152","line":23,"column":79,"nodeType":"153","messageId":"154","endLine":23,"endColumn":81},{"ruleId":"151","severity":1,"message":"152","line":23,"column":96,"nodeType":"153","messageId":"154","endLine":23,"endColumn":98},{"ruleId":"151","severity":1,"message":"152","line":90,"column":42,"nodeType":"153","messageId":"154","endLine":90,"endColumn":44},{"ruleId":"151","severity":1,"message":"152","line":90,"column":63,"nodeType":"153","messageId":"154","endLine":90,"endColumn":65},{"ruleId":"151","severity":1,"message":"152","line":96,"column":44,"nodeType":"153","messageId":"154","endLine":96,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":96,"column":67,"nodeType":"153","messageId":"154","endLine":96,"endColumn":69},{"ruleId":"141","replacedBy":"155"},{"ruleId":"143","replacedBy":"156"},{"ruleId":"141","replacedBy":"157"},{"ruleId":"143","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"163","line":2,"column":16,"nodeType":"161","messageId":"162","endLine":2,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":11,"column":3,"nodeType":"161","endLine":11,"endColumn":12,"suggestions":"166"},{"ruleId":"159","severity":1,"message":"167","line":44,"column":9,"nodeType":"161","messageId":"162","endLine":44,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":136,"column":32,"nodeType":"153","messageId":"154","endLine":136,"endColumn":34},{"ruleId":"151","severity":1,"message":"152","line":136,"column":43,"nodeType":"153","messageId":"154","endLine":136,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":10,"column":83,"nodeType":"153","messageId":"154","endLine":10,"endColumn":85},{"ruleId":"151","severity":1,"message":"152","line":10,"column":100,"nodeType":"153","messageId":"154","endLine":10,"endColumn":102},{"ruleId":"151","severity":1,"message":"152","line":11,"column":87,"nodeType":"153","messageId":"154","endLine":11,"endColumn":89},{"ruleId":"151","severity":1,"message":"152","line":11,"column":102,"nodeType":"153","messageId":"154","endLine":11,"endColumn":104},{"ruleId":"168","severity":1,"message":"169","line":28,"column":21,"nodeType":"170","endLine":28,"endColumn":143},{"ruleId":"151","severity":1,"message":"152","line":29,"column":89,"nodeType":"153","messageId":"154","endLine":29,"endColumn":91},{"ruleId":"151","severity":1,"message":"152","line":29,"column":122,"nodeType":"153","messageId":"154","endLine":29,"endColumn":124},{"ruleId":"168","severity":1,"message":"169","line":32,"column":21,"nodeType":"170","endLine":32,"endColumn":143},{"ruleId":"151","severity":1,"message":"152","line":33,"column":89,"nodeType":"153","messageId":"154","endLine":33,"endColumn":91},{"ruleId":"151","severity":1,"message":"152","line":33,"column":121,"nodeType":"153","messageId":"154","endLine":33,"endColumn":123},{"ruleId":"171","severity":1,"message":"172","line":67,"column":21,"nodeType":"170","endLine":67,"endColumn":136},{"ruleId":"164","severity":1,"message":"173","line":30,"column":6,"nodeType":"174","endLine":30,"endColumn":8,"suggestions":"175"},{"ruleId":"151","severity":1,"message":"152","line":11,"column":42,"nodeType":"153","messageId":"154","endLine":11,"endColumn":44},{"ruleId":"151","severity":1,"message":"152","line":11,"column":63,"nodeType":"153","messageId":"154","endLine":11,"endColumn":65},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unreachable","Unreachable code.","ThrowStatement","unreachableCode",["176"],["177"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["176"],["177"],["176"],["177"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSubmitted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [updateForm] as a second argument to the useEffect Hook.",["178"],"'onClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","React Hook useEffect has a missing dependency: 'tweets'. Either include it or remove the dependency array. You can also do a functional update 'setTweets(t => ...)' if you only need 'tweets' in the 'setTweets' call.","ArrayExpression",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Add dependencies array: [updateForm]",{"range":"184","text":"185"},"Update the dependencies array to be: [tweets]",{"range":"186","text":"187"},[605,605],", [updateForm]",[895,897],"[tweets]"]