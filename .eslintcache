[{"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/App.js":"1","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/auth.service.js":"2","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/user.service.js":"3","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowList.component.js":"4","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetDetail.component.js":"5","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/reportWebVitals.js":"6","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/profile.component.js":"7","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/settings.component.js":"8","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/login.component.js":"9","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetList.component.js":"10","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/leftSidebar.component.js":"11","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowDetail.component.js":"12","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/mainWrapper.component.js":"13","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/profileHeader.component.js":"14","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/topheader.component.js":"15","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/home.component.js":"16","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/newTweet.component.js":"17","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/tweet.service.js":"18","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/index.js":"19","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/authRoute.component.js":"20","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/privateRoute.component.js":"21","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/register.component.js":"22"},{"size":1708,"mtime":1611426493590,"results":"23","hashOfConfig":"24"},{"size":4698,"mtime":1611329859491,"results":"25","hashOfConfig":"24"},{"size":13688,"mtime":1611328893933,"results":"26","hashOfConfig":"24"},{"size":1014,"mtime":1611328893910,"results":"27","hashOfConfig":"24"},{"size":4135,"mtime":1611423002462,"results":"28","hashOfConfig":"24"},{"size":362,"mtime":1611328893920,"results":"29","hashOfConfig":"24"},{"size":1975,"mtime":1611330278050,"results":"30","hashOfConfig":"24"},{"size":5246,"mtime":1611422887530,"results":"31","hashOfConfig":"24"},{"size":3886,"mtime":1611329781098,"results":"32","hashOfConfig":"24"},{"size":321,"mtime":1611328893903,"results":"33","hashOfConfig":"24"},{"size":1376,"mtime":1611328893874,"results":"34","hashOfConfig":"24"},{"size":2231,"mtime":1611423045906,"results":"35","hashOfConfig":"24"},{"size":1067,"mtime":1611328893831,"results":"36","hashOfConfig":"24"},{"size":3475,"mtime":1611422951441,"results":"37","hashOfConfig":"24"},{"size":4850,"mtime":1611328893888,"results":"38","hashOfConfig":"24"},{"size":1272,"mtime":1611422878751,"results":"39","hashOfConfig":"24"},{"size":2047,"mtime":1611328893881,"results":"40","hashOfConfig":"24"},{"size":8168,"mtime":1611423067576,"results":"41","hashOfConfig":"24"},{"size":544,"mtime":1611418631661,"results":"42","hashOfConfig":"24"},{"size":609,"mtime":1611328893858,"results":"43","hashOfConfig":"24"},{"size":611,"mtime":1611328893868,"results":"44","hashOfConfig":"24"},{"size":10443,"mtime":1611328893855,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13spa3z",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/App.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/auth.service.js",["99"],"import axios from 'axios';\nimport jwt from 'jsonwebtoken';\n\nconst API_URL = 'http://127.0.0.1:8000/api/auth/';\n\nexport default class AuthService {\n    static async login(username, password) {\n        return axios.post(API_URL + 'jwt/create/', {\n            username: username,\n            password: password\n        }).then(response => {\n            if (response.data.access) {\n                let token = response.data.access;\n                let decodedToken = jwt.decode(token);\n                var result = {\n                    id: decodedToken.user_id,\n                    username: username,\n                    token_exp: decodedToken.exp,\n                    access_token: response.data.access,\n                    refresh_token: response.data.refresh\n                };\n                localStorage.setItem('user', JSON.stringify(result));\n                return result;\n            } else {\n                throw Error('Login failed.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Login failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Login failed HTTP request. ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Login failed: ${error.message}`);\n              }\n              throw Error(`Login failed: ${error.config}`);\n        })\n    }\n\n    static async register(username, email, first_name, last_name, password, re_password) {\n        return axios.post(API_URL + 'users/', {\n            username, email, first_name, last_name, password, re_password\n        })\n        .then(response => {\n            if (response.status === 201) {\n                return { data: response.data };\n            } else {\n                throw Error(`Register faild with HTTP ${response.status}: ${response.data}`);\n            }\n        }).catch(error => {\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                if (error.response.status === 400) {\n                    let data = error.response.data;\n                    if (data.username) {\n                        return { \n                            error: true, \n                            message: { field: 'username', value: data.username[0]},\n                        }\n                    }\n                    else if (data.email) {\n                        return { \n                            error: true, \n                            message: { field: 'email', value: data.email[0]},\n                        }\n                    }\n                    else if (data.password) {\n                        return { \n                            error: true, \n                            message: { field: 'password', value: data.password[0]},\n                        }\n                    }\n                } else {\n                    throw Error(`Register failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Register failed HTTP request ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Register failed: ${error.message}`);\n              }\n              throw Error(`Register failed: ${error.config}`);\n        })\n    }\n\n    static logout() {\n        localStorage.removeItem('user');\n    }\n\n    static getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    static isAuthenticated() {\n        let user = this.getCurrentUser();\n        let dateNow = new Date();\n\n        if (user && (dateNow.getTime()/1000) < user.token_exp) {\n            return true;\n        }\n        \n        this.logout();\n        return false;\n    }\n\n};",["100","101"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/user.service.js",["102","103"],"import axios from 'axios';\nimport AuthService from './auth.service.js';\n\nconst USER = AuthService.getCurrentUser();\nconst API_URL = 'http://localhost:8000/api/profile/';\nconst OPTIONS = {\n    method: 'POST',\n    headers: { \n      'Content-Type': 'application/json', \n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + (USER && USER.access_token || ''),\n    },\n} \n\nexport default class UserService {\n    static async getProfile(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 404) {\n                    return {error: true, message: error.response.data}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async getTweets(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/tweets/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async me() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async updateProfile(first_name, last_name, bio, location) {\n        let method = (first_name && last_name && bio && location && bio) ? 'put' : 'patch';\n        \n        return axios({\n            method: method,\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers,\n            data: {\n                first_name,\n                last_name,\n                bio,\n                location\n            }\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to update profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to update profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed update profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to update profile ${error.config}`);\n              }\n        })\n    }\n\n    static async whoToFollow() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'who-to-follow',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error(`Failed to fetch who to follow ${response.response.status}: ${response.response.data}`);\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch who to follow ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch who to follow ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch who to follow ${error.config}`);\n              }\n        })\n    }\n\n    static async followProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/follow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to follow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to follow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed follow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to follow profile ${error.config}`);\n              }\n        })\n    };\n\n    static async unfollowProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/unfollow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to unfollow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to unfollow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed unfollow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to unfollow profile ${error.config}`);\n              }\n        })\n    }\n\n    static async following(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/following/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get following list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get following list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get following list ${error.request}`);\n              } else {\n                throw Error(`Failed to get following list ${error.config}`);\n              }\n        })\n    };\n\n    static async followers(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/followers/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get followers list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get followers list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get followers list ${error.request}`);\n              } else {\n                throw Error(`Failed to get followers list ${error.config}`);\n              }\n        })\n    };\n};",["104","105"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowList.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetDetail.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/reportWebVitals.js",[],["106","107"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/profile.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/settings.component.js",["108","109"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/login.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/tweetList.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/leftSidebar.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/whoToFollowDetail.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/mainWrapper.component.js",[],["110","111"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/profileHeader.component.js",["112","113"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/topheader.component.js",["114"],"import { useEffect, useState } from 'react';\nimport UserService from '../../services/user.service.js';\n\nexport default function TopHeaderComponent(props) {\n    const [user, setUser] = useState();\n    \n    useEffect(() => {\n        UserService.me().then((response) => {\n            setUser(response.data);\n        })\n    }, [])\n\n    return (\n       <header className=\"topbar\" data-navbarbg=\"skin6\">\n            <nav className=\"navbar top-navbar navbar-expand-md\">\n                <div className=\"navbar-header\" data-logobg=\"skin6\">\n                {/* This is for the sidebar toggle which is visible on mobile only */}\n                <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"/\"><i className=\"ti-menu ti-close\" /></a>\n                        {/* Logo */}\n                        <div className=\"navbar-brand\">\n                    {/* Logo icon */}\n                    <a href=\"/\">\n                    <b className=\"logo-icon\">\n                        {/* Dark Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"light-logo\" />\n                    </b>\n                    {/*End Logo icon */}\n                    {/* Logo text */}\n                    <span className=\"logo-text\">\n                        {/* dark Logo text */}\n                        <img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo text */}\n                        <img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\n                    </span>\n                    </a>\n                </div>\n                        {/* End Logo */}\n                        {/* Toggle which is visible on mobile only */}\n                        <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"/\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\" /></a>\n                </div>\n                    {/* End Logo */}\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\n                        {/* toggle and nav items */}\n                        <ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\n                            {/* Header title */}\n                            <li className=\"nav-item\">\n                                <h3 className=\"text-dark mx-3\" >{props.headerTitle}</h3>\n                            </li>\n                         </ul>\n                        {/* Right side toggle and nav items */}\n                        <ul className=\"navbar-nav float-right\">\n                            {/* Search */}\n                            <li className=\"nav-item d-none d-md-block\">\n                    <a className=\"nav-link\" href=\"/\">\n                        <form>\n                        <div className=\"customize-input\">\n                            <input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <i className=\"form-control-icon\" data-feather=\"search\" />\n                        </div>\n                        </form>\n                    </a>\n                    </li>\n                            {/* User profile and search */}\n                            <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"/\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={40} />\n                        <span className=\"ml-2 d-none d-lg-inline-block\"><span className=\"text-dark\">{user && user.first_name}</span> <i data-feather=\"chevron-down\" className=\"svg-icon\" /></span>\n                    </a>\n                    <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\n                        <a className=\"dropdown-item\" href=\"/profile\"><i data-feather=\"user\" className=\"svg-icon mr-2 ml-1\" />My Profile</a>\n                        <a className=\"dropdown-item\" href=\"/settings\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />Account Setting</a>\n                        <a className=\"dropdown-item\" href=\"/logout\"><i data-feather=\"power\" className=\"svg-icon mr-2 ml-1\" />Logout</a>\n                    </div>\n                    </li>\n                            {/* User profile and search */}\n                            </ul>\n                </div>\n            </nav>\n            </header>\n    )\n}","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/page_contents/home.component.js",["115"],"\nimport { useState, useEffect } from 'react';\nimport NewTweetComponent from '../sections/newTweet.component.js';\nimport TweetListComponent from '../sections/tweetList.component.js';\nimport WhoToFollowListComponent from '../sections/whoToFollowList.component.js';\nimport TweetService from '../../services/tweet.service.js';\n\nfunction HomeComponent(props) {\n  const [tweets, setTweets] = useState([]);\n\n  const handleNewTweet = (message, image=null) => {\n    TweetService.newTweet(message).then(response =>  {\n      if (!response.error) {\n        setTweets([response.data, ...tweets]);\n      }\n    })\n  }\n    \n  // When mount completed\n  useEffect(() => {\n    TweetService.getFeeds().then(response => {\n      if (!response.error) {\n        setTweets(tweets.concat(...response.data));\n      } else {\n        alert(response.message);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  }, [])\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-md-8\">\n          <NewTweetComponent handleNewTweet={handleNewTweet}/>\n          <TweetListComponent tweets={tweets}/>\n      </div>\n      {/* Right sidebar */}\n      <div className=\"right-sidebar col-md-4\">\n        <WhoToFollowListComponent/>\n      </div>\n    </div>\n    )\n}\n\nexport default HomeComponent;\n","/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/sections/newTweet.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/services/tweet.service.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/index.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/authRoute.component.js",[],["116","117"],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/routes/privateRoute.component.js",[],"/Users/saturnv/Documents/Projects/Portofolio/twitter-clone/env/twitter_clone/src/components/register.component.js",[],{"ruleId":"118","severity":1,"message":"119","line":45,"column":15,"nodeType":"120","messageId":"121","endLine":45,"endColumn":60},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":42,"nodeType":"128","messageId":"129","endLine":11,"endColumn":44},{"ruleId":"126","severity":1,"message":"127","line":11,"column":63,"nodeType":"128","messageId":"129","endLine":11,"endColumn":65},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":8,"column":9,"nodeType":"136","messageId":"137","endLine":8,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":25,"column":6,"nodeType":"140","endLine":25,"endColumn":8,"suggestions":"141"},{"ruleId":"122","replacedBy":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":28,"column":21,"nodeType":"146","endLine":28,"endColumn":143},{"ruleId":"144","severity":1,"message":"145","line":32,"column":21,"nodeType":"146","endLine":32,"endColumn":143},{"ruleId":"147","severity":1,"message":"148","line":67,"column":21,"nodeType":"146","endLine":67,"endColumn":136},{"ruleId":"138","severity":1,"message":"149","line":30,"column":6,"nodeType":"140","endLine":30,"endColumn":8,"suggestions":"150"},{"ruleId":"122","replacedBy":"151"},{"ruleId":"124","replacedBy":"152"},"no-unreachable","Unreachable code.","ThrowStatement","unreachableCode","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["153"],["154"],["153"],["154"],"no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateForm'. Either include it or remove the dependency array.","ArrayExpression",["155"],["153"],["154"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","React Hook useEffect has a missing dependency: 'tweets'. Either include it or remove the dependency array. You can also do a functional update 'setTweets(t => ...)' if you only need 'tweets' in the 'setTweets' call.",["156"],["153"],["154"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [updateForm]",{"range":"161","text":"162"},"Update the dependencies array to be: [tweets]",{"range":"163","text":"164"},[665,667],"[updateForm]",[895,897],"[tweets]"]