{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/sections/newTweet.component.js","services/tweet.service.js","components/sections/tweetDetail.component.js","components/sections/tweetList.component.js","services/user.service.js","components/sections/whoToFollowDetail.component.js","components/sections/whoToFollowList.component.js","components/page_contents/home.component.js","components/sections/profileHeader.component.js","components/page_contents/profile.component.js","components/page_contents/settings.component.js","components/routes/authRoute.component.js","components/sections/topheader.component.js","components/sections/leftSidebar.component.js","components/routes/privateRoute.component.js","components/mainWrapper.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","AuthService","username","password","axios","post","then","response","data","access","token","decodedToken","jwt","decode","result","id","user_id","token_exp","exp","access_token","refresh_token","refresh","localStorage","setItem","JSON","stringify","Error","catch","error","console","log","status","message","detail","request","email","first_name","last_name","re_password","field","value","config","removeItem","parse","getItem","user","this","getCurrentUser","dateNow","Date","getTime","logout","LoginComponent","useForm","register","handleSubmit","errors","history","useHistory","useState","errorMessage","setErrorMessage","cleanErrorMessage","className","style","maxWidth","src","height","width","alt","onSubmit","login","push","window","location","reload","alert","htmlFor","name","type","placeholder","onChange","ref","required","to","RegisterComponent","watch","useRef","current","retype_password","values","minLength","maxLength","pattern","validate","disabled","NewTweetComponent","props","inputText","setInputText","disabledButton","setDisabledButton","event","preventDefault","handleNewTweet","rows","e","target","length","border","outline","overflow","resize","USER","OPTIONS","method","headers","TweetService","url","content","image","Object","join","Math","round","tweetSeparator","borderTop","btnExtraSmall","fontSize","TweetDetailComponent","tweet","setTweet","is_already_liked","likeStyle","setLikeStyle","is_a_retweet","retweetStyle","setRetweetStyle","href","onClick","unlikeTweet","likeTweet","size","likes_count","removeTweet","retweet","retweet_count","TweetListComponent","tweets","map","UserService","bio","separator","WhoToFollowDetailComponent","profile","already_followed","followState","setFollowState","followStyle","setFollowStyle","followCaption","setFollowCaption","unfollowProfile","followProfile","WhoToFollowListComponent","profiles","setProfiles","useEffect","whoToFollow","HomeComponent","setTweets","getFeeds","concat","newTweet","ProfileHeaderComponent","undefined","modal","setModal","toggleModal","modalType","followers","following","data-toggle","data-target","following_count","follower_count","tabIndex","role","aria-labelledby","aria-hidden","display","data-dismiss","aria-label","item","ProfileComponent","setFollowing","setFollowers","setUser","userTweets","setUserTweets","getProfile","getTweets","res","SettingsComponent","setValue","submitted","setSubmitted","mounted","updateForm","me","updateProfile","AuthRoute","Component","component","rest","isAuthenticated","render","pathname","state","from","TopHeaderComponent","data-navbarbg","data-logobg","aria-controls","aria-expanded","headerTitle","data-feather","aria-haspopup","LeftSidebarComponent","data-sidebarbg","PrivateRoute","MainWrapper","data-theme","data-layout","data-sidebartype","data-sidebar-position","data-header-position","data-boxed-layout","title","App","ProfileWrapper","params","useParams","path","Login","Register","exact","Home","Settings","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0793e1fe.chunk.js","sourcesContent":["import axios from 'axios';\nimport jwt from 'jsonwebtoken';\n\nconst API_URL = 'http://127.0.0.1:8000/api/auth/';\n\nexport default class AuthService {\n    static async login(username, password) {\n        return axios.post(API_URL + 'jwt/create/', {\n            username: username,\n            password: password\n        }).then(response => {\n            if (response.data.access) {\n                let token = response.data.access;\n                let decodedToken = jwt.decode(token);\n                var result = {\n                    id: decodedToken.user_id,\n                    username: username,\n                    token_exp: decodedToken.exp,\n                    access_token: response.data.access,\n                    refresh_token: response.data.refresh\n                };\n                localStorage.setItem('user', JSON.stringify(result));\n                return result;\n            } else {\n                throw Error('Login failed.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Login failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Login failed HTTP request. ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Login failed: ${error.message}`);\n              }\n              throw Error(`Login failed: ${error.config}`);\n        })\n    }\n\n    static async register(username, email, first_name, last_name, password, re_password) {\n        return axios.post(API_URL + 'users/', {\n            username, email, first_name, last_name, password, re_password\n        })\n        .then(response => {\n            if (response.status === 201) {\n                return { data: response.data };\n            } else {\n                throw Error(`Register faild with HTTP ${response.status}: ${response.data}`);\n            }\n        }).catch(error => {\n            if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                if (error.response.status === 400) {\n                    let data = error.response.data;\n                    if (data.username) {\n                        return { \n                            error: true, \n                            message: { field: 'username', value: data.username[0]},\n                        }\n                    }\n                    else if (data.email) {\n                        return { \n                            error: true, \n                            message: { field: 'email', value: data.email[0]},\n                        }\n                    }\n                    else if (data.password) {\n                        return { \n                            error: true, \n                            message: { field: 'password', value: data.password[0]},\n                        }\n                    }\n                } else {\n                    throw Error(`Register failed with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                throw Error(`Register failed HTTP request ${error.request}`);\n              } else {\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Register failed: ${error.message}`);\n              }\n              throw Error(`Register failed: ${error.config}`);\n        })\n    }\n\n    static logout() {\n        localStorage.removeItem('user');\n    }\n\n    static getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n\n    static isAuthenticated() {\n        let user = this.getCurrentUser();\n        let dateNow = new Date();\n\n        if (user && (dateNow.getTime()/1000) < user.token_exp) {\n            return true;\n        }\n        \n        this.logout();\n        return false;\n    }\n\n};","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport AuthService from '../services/auth.service.js';\n\nfunction LoginComponent() {\n  const { register, handleSubmit, errors } = useForm();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onSubmit = data => {\n    const { username, password } = data;\n    AuthService.login(username, password).then((response) => {\n      if (!response.error) {\n        history.push('/home');\n        window.location.reload();\n      } else {\n        setErrorMessage(response.message);\n        console.log('errorMessage',errorMessage);\n      }\n    }).catch((error) => {\n      alert(error);\n    })\n  }\n\n  const cleanErrorMessage = () => setErrorMessage('');\n\n  return (\n      <div className=\"auth-wrapper d-flex no-block justify-content-center align-items-center position-relative\">\n      <div className=\"auth-box row\" style={{maxWidth:'400px'}}>\n        <div className=\"col-lg-12 col-md-12 bg-white\">\n          <div className=\"p-3\">\n            <div className=\"text-center\">\n              <img src=\"./logo192.png\" style={{height:'5rem',width:'auto'}} alt=\"wrapkit\" />\n            </div>\n            <h2 className=\"mt-3 text-center\">Sign In</h2>\n            <p className=\"text-center\">Enter your username and password to sign in. For demo account username: demo password: demo</p>\n            <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"form-group\">\n                    <label className=\"text-dark\" htmlFor=\"uname\">Username</label>\n                    <input \n                      className=\"form-control\" \n                      id=\"uname\" \n                      name=\"username\"\n                      type=\"text\" \n                      placeholder=\"enter your username\"\n                      onChange={cleanErrorMessage}\n                      ref={register({ \n                        required: {\n                          value: true,\n                          message: \"Enter your username\"\n                        }})}/>\n                      {(errors.username && errors.username.message &&\n                      <span className=\"text-danger\">{errors.username.message}</span>) || \n                      (errorMessage && <span className=\"text-danger\">{errorMessage}</span>)}\n                  </div>\n                </div>\n                <div className=\"col-lg-12\">\n                  <div className=\"form-group\">\n                    <label className=\"text-dark\" htmlFor=\"pwd\">Password</label>\n                    <input \n                      className=\"form-control\" \n                      id=\"pwd\" \n                      name=\"password\"\n                      type=\"password\" \n                      placeholder=\"enter your password\"\n                      onChange={cleanErrorMessage}\n                      ref={register({ \n                        required: {\n                          value: true,\n                          message: \"Enter your password\"\n                        }})}/>\n                      {errors.password && errors.password.message &&\n                      <span className=\"text-danger\">{errors.password.message}</span>}\n                  </div>\n                </div>\n                <div className=\"col-lg-12 text-center\">\n                  <button type=\"submit\" className=\"btn btn-block btn-dark\">Sign In</button>\n                </div>\n                <div className=\"col-lg-12 text-center mt-5\">\n                  Don't have an account? <Link to=\"/register\" className=\"text-danger\">Sign Up</Link>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>          \n  );\n}\n\nexport default LoginComponent;","import React, { useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\n\nimport AuthService from '../services/auth.service.js';\n\nfunction RegisterComponent() {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const password = useRef({});\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  password.current = watch(\"password\", \"\");\n\n  const onSubmit = data => {\n    const {username, email, first_name, last_name, password, retype_password: re_password} = data;\n\n    AuthService.register(username, email, first_name, last_name, password, re_password).then(response => {\n        if (!response.error) {\n          // If login success, it will be redirected to homepage. Else to login page\n          AuthService.login(username, password).then(() => {\n            history.push('/home');\n            window.location.reload();\n          }).catch((error) => {\n            history.push('/login');\n            window.location.reload();\n          })\n        } \n        // If user posts bad input data, a message will be displayed according to its field\n        else {\n          console.log(response.message);\n          if (response.message.field === 'username') { \n            setErrorMessage(values => ({...values, username: response.message.value})) \n          };\n          if (response.message.field === 'email') { \n            setErrorMessage(values => ({...values, email: response.message.value})) \n          };\n          if (response.message.field === 'password') { \n            setErrorMessage(values => ({...values, password: response.message.value})) \n           };\n        }\n        console.log(errorMessage);\n      }\n    ).catch(error => {\n      alert(error);\n    });\n  };\n\n  const cleanErrorMessage = () => setErrorMessage({username: \"\", email: \"\", password: \"\"});\n\n    return (\n        <div className=\"auth-wrapper d-flex no-block justify-content-center align-items-center position-relative\">  \n        <div className=\"auth-box row\" style={{maxWidth:'400px'}}>\n          <div className=\"col-lg-12 col-md-12 bg-white\">\n            <div className=\"p-3\">\n              <div className=\"text-center\">\n                <img src=\"./logo192.png\" style={{height:'5rem',width:'auto'}} alt=\"wrapkit\" />\n              </div>\n              <h2 className=\"mt-3 text-center\">Sign Up</h2>\n              <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"uname\">Username</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"uname\" \n                          name=\"username\"\n                          type=\"text\" \n                          placeholder=\"enter your username\" \n                          onChange={cleanErrorMessage} \n                          ref={register({ \n                            required: {\n                              value: true,\n                              message: \"This field is required\"\n                            }, minLength: {\n                              value: 6,\n                              message: \"Username must have at least 6 characters\"\n                            }, maxLength: {\n                              value: 20,\n                              message: \"Username cannot exceed 20 characters long\"\n                            }})}/>\n                          {(errors.username && errors.username.message &&\n                          <span className=\"text-danger\">{errors.username.message}</span>) || \n                          (errorMessage.username && <span className=\"text-danger\">{errorMessage.username}</span>)}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"email\">Email</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"email\" \n                          name=\"email\"\n                          type=\"email\" \n                          placeholder=\"enter your email address\"\n                          onChange={cleanErrorMessage} \n                          ref={register({ \n                            required: {\n                              value: true,\n                              message: \"This field is required\"\n                            }, pattern: {\n                              value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                              message: \"Please enter valid email\"\n                            }})}/>\n                          {(errors.email && errors.email.message &&\n                          <span className=\"text-danger\">{errors.email.message}</span>) || \n                          (errorMessage.email && <span className=\"text-danger\">{errorMessage.email}</span>)}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"firstname\">First Name</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"firstname\" \n                          name=\"first_name\"\n                          type=\"text\" \n                          placeholder=\"enter your first name\" \n                          ref={register({ \n                            required: {\n                              value: true,\n                              message: \"This field is required\"\n                            }, minLength: {\n                              value: 2,\n                              message: \"First name must have at least 6 characters\"\n                            }, maxLength: {\n                              value: 25,\n                              message: \"First name cannot exceed 25 characters long\"\n                            }})}/>\n                          {errors.first_name && errors.first_name.message &&\n                          <span className=\"text-danger\">{errors.first_name.message}</span>}\n\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"lastname\">Last Name</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"lastname\" \n                          name=\"last_name\"\n                          type=\"text\" \n                          placeholder=\"enter your last name\" \n                          ref={register({ \n                            required: {\n                              value: true,\n                              message: \"This field is required\"\n                            }, minLength: {\n                              value: 2,\n                              message: \"Last name must have at least 2 characters\"\n                            }, maxLength: {\n                              value: 25,\n                              message: \"Last name cannot exceed 25 characters long\"\n                            }})}/>\n                          {errors.last_name && errors.last_name.message &&\n                          <span className=\"text-danger\">{errors.last_name.message}</span>}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"pwd\">Password</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"pwd\"\n                          name=\"password\"\n                          type=\"password\" \n                          placeholder=\"enter your password\" \n                          onChange={cleanErrorMessage} \n                          ref={register({ \n                            required: {\n                              value: true,\n                              message: \"You must specify a password\"},\n                            minLength: {\n                              value: 6,\n                              message: \"Password must have at least 6 characters\"\n                            }})}/>\n                          {(errors.password && errors.password.message &&\n                          <span className=\"text-danger\">{errors.password.message}</span>) ||\n                          (errorMessage.password && <span className=\"text-danger\">{errorMessage.password}</span>)}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <div className=\"form-group\">\n                        <label className=\"text-dark\" htmlFor=\"re-pwd\">Retype Password</label>\n                        <input \n                          className=\"form-control\"\n                          id=\"re-pwd\"\n                          name=\"retype_password\"\n                          type=\"password\" \n                          placeholder=\"enter your password again\" \n                          ref={register({\n                            validate: value =>\n                              (value === password.current || \"The passwords didn't match\") \n                          })}/>\n                          {errors.retype_password && errors.retype_password.message &&\n                          <span className=\"text-danger\">{errors.retype_password.message}</span>}\n                      </div>\n                    </div>\n                    <div className=\"col-lg-12 text-center\">\n                      <button type=\"submit\" className=\"btn btn-block btn-dark\" disabled={false}>Sign Up</button>\n\n                    </div>\n                  <div className=\"col-lg-12 text-center mt-5\">\n                    Already have an account? <Link to=\"/register\" className=\"text-danger\">Sign In</Link>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>          \n    );\n}\n\nexport default RegisterComponent;","\nimport { useState } from \"react\";\n\nfunction NewTweetComponent(props) {\n    const [inputText, setInputText] = useState('');\n    const [disabledButton, setDisabledButton] = useState(true);\n\n    function handleChange(e) {\n        setInputText(e.target.value);\n        if (inputText.length >= 10) {\n            setDisabledButton(false);\n        } else {\n            setDisabledButton(true);\n        }\n    };\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.handleNewTweet(inputText);\n        setInputText('');\n    }\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n            <form onSubmit={handleSubmit}>\n                {/* Tweet content */}\n                <div className=\"row\">\n                <div className=\"col-1 mr-3\">\n                    <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n                </div>\n                <div className=\"col-10\">\n                    <textarea \n                        className=\"form-control\" \n                        rows=\"3\" \n                        placeholder=\"What's on your mind?\" \n                        minLength=\"10\"\n                        maxLength=\"255\"\n                        value={inputText}\n                        onChange={handleChange}\n                        style={{border:\"none\",outline:\"none\",overflow:\"auto\",resize:\"none\"}}\n                        />\n                    <small id=\"textHelp\" className=\"form-text text-muted\">{(inputText.length || 0) + \" / 255\"}</small>\n                </div>\n                </div>\n                {/* Tweet button */}\n                <div className=\"row justify-content-end px-3 my-2\">\n                    <button \n                        type=\"submit\"\n                        className=\"btn btn-rounded btn-primary mr-3\"\n                        disabled={disabledButton}\n                    >Tweet</button>\n                </div>\n            </form>\n\n        </div>\n    </div>\n    )\n}\n\nexport default NewTweetComponent;","import axios from 'axios';\nimport AuthService from \"./auth.service.js\";\n\nconst USER = AuthService.getCurrentUser();\nconst API_URL = 'http://localhost:8000/api/';\nconst OPTIONS = {\n    method: 'POST',\n    headers: { \n      'Content-Type': 'application/json', \n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + (USER && USER.access_token || ''),\n    },\n} \n\nclass TweetService {\n    static async getFeeds() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'feeds/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404) return {\n                error: true, \n                message: \"Tweet not found\", \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to fetch tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async getTweeet(id) {\n        return axios({\n            method: 'get',\n            url: API_URL + 'tweet/' + id,\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404) return {\n                error: true, \n                message: \"Tweet not found\", \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to fetch tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async newTweet(content = '', image = null) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweets/',\n            headers: OPTIONS.headers,\n            data: { content, image } \n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            }\n            else if (error.response.status === 400 ) {\n                return {\n                    error: true, \n                    message: Object.values(error.response.data).join('. '), \n                    status: error.response.status,\n                    data: null\n                }\n            }\n            return {\n                error: true, \n                message: \"Failed to post new tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async likeTweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/like/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404 ) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to like tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async unlikeTweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/unlike/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 404 ) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to unlike tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async retweet(id) {\n        return axios({\n            method: 'post',\n            url: API_URL + 'tweet/' + id + '/retweet/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (Math.round(error.response.status/100) === 4) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to perfom retweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n\n    static async removeTweet(id) {\n        return axios({\n            method: 'delete',\n            url: API_URL + 'tweet/' + id,\n            headers: OPTIONS.headers\n        }).then(response => {\n            return {\n                error: false,\n                message: \"Success\",\n                status: response.status,\n                data: response.data\n            }\n        }).catch(error => {\n            if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (error.response.status === 401) {\n                AuthService.logout();\n                window.location.reload();\n            } else if (Math.round(error.response.status/100) === 4) return {\n                error: true, \n                message: Object.values(error.response.data).join('. '), \n                status: error.response.status,\n                data: null\n            }\n            return {\n                error: true, \n                message: \"Failed to remove tweet\",\n                status: error.response.status,\n                data: null\n            }\n        })\n    }\n}\n\nexport default TweetService;","import { useState } from 'react';\nimport { Repeat, Heart } from 'react-feather';\nimport TweetService from '../../services/tweet.service.js';\n\n\nconst tweetSeparator = {\n    borderTop: \"1px solid var(--light)\",\n  };\nconst btnExtraSmall = {\n    fontSize: \"1em\",\n    width:\"2rem\",\n    height:\"2rem\"\n  };\n\nfunction TweetDetailComponent(props) {\n    // const [likeState, setLikeState] = useState(props.tweet.is_already_liked);\n    // const [likeStyle, setLikeStyle] = useState(props.tweet.is_already_liked && 'btn-danger' || 'btn-light');\n    // const [retweetState, setRetweetState] = useState(props.tweet.is_a_retweet);\n    // const [retweetStyle, setRetweetStyle] = useState((props.tweet.is_a_retweet && 'btn-primary' || 'btn-light'));\n\n    const [tweet, setTweet] = useState(props.tweet);\n    const [likeStyle, setLikeStyle] = useState(props.tweet.is_already_liked && 'btn-danger' || 'btn-light');\n    const [retweetStyle, setRetweetStyle] = useState(props.tweet.is_a_retweet && 'btn-primary' || 'btn-light');\n\n    function handleLike() {\n        // Unlike tweet\n        if (tweet.is_already_liked) {\n            TweetService.unlikeTweet(props.tweet.id).then((response) => {\n                if (!response.error) {\n                    setTweet(response.data);\n                    setLikeStyle('btn-light');\n                };\n            });\n        // Like tweet\n        } else {\n            TweetService.likeTweet(props.tweet.id).then((response) => {\n                if (!response.error) {\n                    setTweet(response.data);\n                    setLikeStyle('btn-danger');\n                };\n            });\n        }\n    }\n\n    function handleRetweet() {\n        if (tweet.is_a_retweet) {\n            TweetService.removeTweet(props.tweet.id).then((response) => {\n                if (!response.error) {\n                    setTweet(response.data);\n                    setRetweetStyle('btn-light');\n                };\n            });\n        } else {\n            TweetService.retweet(props.tweet.id).then((response) => {\n                if (!response.error) {\n                    setTweet(response.data);\n                    setRetweetStyle('btn-primary');\n                };\n            });\n        }\n\n    }\n\n    return (\n        <div className=\"card-body\" style={tweetSeparator}>\n        {/* Tweet content */}\n        <div className=\"row\">\n        <div className=\"col-1 mr-3\">\n            <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n        </div>\n        <div className=\"col-10\">\n            <h5 className=\"text-dark\">\n                <a href={\"/profile/\"+ tweet.user.username}>{\n                    // (props.tweet.user.first_name && props.tweet.user.last_name\n                    // && props.tweet.user.first_name + ' ' + props.tweet.user.last_name) ||\n                    // (props.tweet.user.first_name && props.tweet.user.first_name) || \n                    // (props.tweet.user.last_name && props.tweet.user.last_name) || ''}\n                    (props.tweet.user &&\n                        props.tweet.user.first_name + ' ' + props.tweet.user.last_name)}</a>\n                <span> @{props.tweet.user.username}</span></h5>\n            <p>{props.tweet.content}</p>\n        </div>\n        </div>\n        {/* Tweet button */}\n        <div className=\"row justify-content-center px-3 my-2\">\n             <div className='col-2'>\n                <button type=\"button\" className={likeStyle + ' btn btn-xs btn-circle p-0 mr-2'} onClick={handleLike} style={btnExtraSmall}>\n                    <Heart size={\".8rem\"}/>\n                </button>\n                <span>{tweet.likes_count && tweet.likes_count || 0}</span>\n             </div>\n             <div className='col-2'>\n                <button type=\"button\" className={retweetStyle + ' btn btn-xs btn-circle p-0 mr-2'} onClick={handleRetweet} style={btnExtraSmall}>\n                    <Repeat size={\".8rem\"}/>\n                </button>\n                <span>{tweet.retweet_count && tweet.retweet_count || 0}</span>\n             </div>\n        </div>\n    </div>\n    )\n}\n\nexport default TweetDetailComponent;","import TweetDetailComponent from '../sections/tweetDetail.component.js';\n\nfunction TweetListComponent(props) {\n    return (\n        <div className=\"card\">\n          {props.tweets && props.tweets.map(tweet => <TweetDetailComponent tweet={tweet} key={tweet.id}/>)}\n        </div>\n    )\n}\n\nexport default TweetListComponent;","import axios from 'axios';\nimport AuthService from './auth.service.js';\n\nconst USER = AuthService.getCurrentUser();\nconst API_URL = 'http://localhost:8000/api/profile/';\nconst OPTIONS = {\n    method: 'POST',\n    headers: { \n      'Content-Type': 'application/json', \n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + (USER && USER.access_token || ''),\n    },\n} \n\nexport default class UserService {\n    static async getProfile(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 404) {\n                    return {error: true, message: error.response.data}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async getTweets(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/tweets/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async me() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (response.status === 200) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to fetch data.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                console.log(error.response.data);\n                if (error.response.status === 401) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch data with HTTP ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch data. ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch data. ${error.config}`);\n              }\n        })\n    };\n\n    static async updateProfile(first_name, last_name, bio, location) {\n        let method = (first_name && last_name && bio && location && bio) ? 'put' : 'patch';\n        \n        return axios({\n            method: method,\n            url: API_URL + 'me/',\n            headers: OPTIONS.headers,\n            data: {\n                first_name,\n                last_name,\n                bio,\n                location\n            }\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to update profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to update profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed update profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to update profile ${error.config}`);\n              }\n        })\n    }\n\n    static async whoToFollow() {\n        return axios({\n            method: 'get',\n            url: API_URL + 'who-to-follow',\n            headers: OPTIONS.headers\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error(`Failed to fetch who to follow ${response.response.status}: ${response.response.data}`);\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to fetch who to follow ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to fetch who to follow ${error.request}`);\n              } else {\n                throw Error(`Failed to fetch who to follow ${error.config}`);\n              }\n        })\n    }\n\n    static async followProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/follow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to follow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to follow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed follow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to follow profile ${error.config}`);\n              }\n        })\n    };\n\n    static async unfollowProfile(username) {\n        return axios({\n            method: 'post',\n            url: API_URL + username + '/unfollow/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to unfollow profile.')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to unfollow profile ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed unfollow profile. ${error.request}`);\n              } else {\n                throw Error(`Failed to unfollow profile ${error.config}`);\n              }\n        })\n    }\n\n    static async following(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/following/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get following list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get following list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get following list ${error.request}`);\n              } else {\n                throw Error(`Failed to get following list ${error.config}`);\n              }\n        })\n    };\n\n    static async followers(username) {\n        return axios({\n            method: 'get',\n            url: API_URL + username + '/followers/',\n            headers: OPTIONS.headers,\n        }).then(response => {\n            if (Math.round(response.status/100) === 2) {\n                return {\n                    error: false,\n                    message: null,\n                    data: response.data\n                };\n            } else {\n                throw Error('Failed to get followers list')\n            }\n        })\n        .catch(error => {\n            if (error.response) {\n                if (Math.round(error.response.status/100) === 4) {\n                    return {error: true, message: error.response.data.detail}\n                } else {\n                    throw Error(`Failed to get followers list ${error.response.status}: ${error.response.data}`);\n                }\n              } else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                // Something happened in setting up the request that triggered an Error\n                throw Error(`Failed to get followers list ${error.request}`);\n              } else {\n                throw Error(`Failed to get followers list ${error.config}`);\n              }\n        })\n    };\n};","import { useState } from \"react\";\nimport UserService from '../../services/user.service.js';\n\nconst separator = {\n    borderTop: \"1px solid var(--light)\",\n  };\n\nfunction WhoToFollowDetailComponent(props) {\n    const [followState, setFollowState] = useState(props.profile.already_followed);\n    const [followStyle, setFollowStyle] = useState(props.profile.already_followed && 'btn-success' || 'btn-primary');\n    const [followCaption, setFollowCaption] = useState(props.profile.already_followed && 'Following' || 'Follow');\n\n    function handleFollow() {\n        // Unfollow profile\n        if (followState) {\n            UserService.unfollowProfile(props.profile.username).then(response => {\n                if (!response.error) {\n                    setFollowStyle('btn-primary');\n                    setFollowCaption('Follow');\n                    setFollowState(response.data.already_followed);\n                }\n            });\n            \n        // Follow profile\n        } else {\n            UserService.followProfile(props.profile.username).then(response => {\n                if (!response.error) {\n                    setFollowStyle('btn-success');\n                    setFollowCaption('Following');\n                    setFollowState(response.data.already_followed);\n                }\n            });\n        }\n    }\n\n    return (\n        <div className=\"card-body\" style={separator}>\n            {/* Tweet content */}\n            <div className=\"row\">\n            <div className=\"col-3\">\n                <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n            </div>\n            <div className=\"col-5\">\n                <h5 className=\"text-dark\"><a href={\"profile/\" + props.profile.username}>{\n                    props.profile.first_name + ' ' + props.profile.last_name\n                }</a></h5>\n                <h5 className=\"text-dark\">@{props.profile.username}</h5>    \n            </div>\n            <div className=\"col-4 text-center mx-0\">\n                <button className={followStyle + \" btn btn-rounded\"} onClick={handleFollow}>{followCaption}</button>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default WhoToFollowDetailComponent;","import { useEffect, useState } from 'react';\nimport WhoToFollowDetailComponent from '../sections/whoToFollowDetail.component.js';\nimport UserService from '../../services/user.service.js';\n\nfunction WhoToFollowListComponent(props) {\n    const [profiles, setProfiles] = useState([]);\n\n    // Component did mount\n    useEffect(() => { \n        UserService.whoToFollow().then(response => {\n            if (!response.error) {\n                setProfiles(response.data);\n            } else {\n                alert(response.message);\n            };\n        }).catch(error => {\n            alert(error.message);\n        })\n    }, [])\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n            <h4 className=\"card-title\">Who to follow?</h4>\n            </div>\n            {profiles && profiles.map(profile => {\n                return <WhoToFollowDetailComponent profile={profile} key={profile.user_id}/>\n            })}\n        </div>\n    )\n};\n\nexport default WhoToFollowListComponent;","\nimport { useState, useEffect } from 'react';\nimport NewTweetComponent from '../sections/newTweet.component.js';\nimport TweetListComponent from '../sections/tweetList.component.js';\nimport WhoToFollowListComponent from '../sections/whoToFollowList.component.js';\nimport TweetService from '../../services/tweet.service.js';\n\nfunction HomeComponent(props) {\n  const [tweets, setTweets] = useState([]);\n\n  const handleNewTweet = (message, image=null) => {\n    TweetService.newTweet(message).then(response =>  {\n      if (!response.error) {\n        setTweets([response.data, ...tweets]);\n      }\n    })\n  }\n    \n  // When mount completed\n  useEffect(() => {\n    TweetService.getFeeds().then(response => {\n      if (!response.error) {\n        setTweets(tweets.concat(...response.data));\n      } else {\n        alert(response.message);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  }, [tweets])\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-md-8\">\n          <NewTweetComponent handleNewTweet={handleNewTweet}/>\n          <TweetListComponent tweets={tweets}/>\n      </div>\n      {/* Right sidebar */}\n      <div className=\"right-sidebar col-md-4\">\n        <WhoToFollowListComponent/>\n      </div>\n    </div>\n    )\n}\n\nexport default HomeComponent;\n","\nimport { useState } from \"react\";\nimport WhoToFollowDetailComponent from '../sections/whoToFollowDetail.component.js';\n\nfunction ProfileHeaderComponent(props) {\n    const [ modal, setModal ] = useState({\n        type: undefined,\n        content: []\n    });\n\n    function toggleModal(modalType) {\n        const content = (modalType === 'Followers') ? props.followers : props.following;\n        setModal({...modal, type: modalType, content: content});\n    }\n    \n    return (\n        <div className=\"card text-center\">\n            <div className=\"card-body\">\n                <div className=\"row justify-content-center my-3\">\n                    <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={60}/>\n                </div>\n                <h3 className=\"card-title\">{props.profile && \n                    (props.profile.first_name + ' ' + props.profile.last_name)}</h3>\n                <h4 className=\"card-subtitle\">{props.profile && `@${props.profile.username}`}</h4>\n                <small className=\"badge badge-pill badge-info form-text text-white\">{props.profile && props.profile.location}</small>\n                <h6 className=\"card-text my-3\">{props.profile && props.profile.bio}</h6>\n                <div className=\"row justify-content-center my-3\">\n                    <a href=\"\" className=\"col-2\" data-toggle=\"modal\" data-target=\"#scrollable-modal\" onClick={() => toggleModal('Following')}>\n                        <h2 className=\"text-dark mb-1 font-weight-small\">{props.profile && props.profile.following_count || 0}</h2>\n                        <h6 className=\"text-muted font-weight-normal mb-0 w-100 text-truncate\">Following</h6>\n                    </a>\n                    <a href=\"\" className=\"col-2\" data-toggle=\"modal\" data-target=\"#scrollable-modal\" onClick={() => toggleModal('Followers')}>\n                        <h2 className=\"text-dark mb-1 font-weight-small\">{props.profile && props.profile.follower_count || 0}</h2>\n                        <h6 className=\"text-muted font-weight-normal mb-0 w-100 text-truncate\">Followers</h6>\n                    </a>\n                </div>\n            </div>\n            {/* Modal */}\n            <div className=\"modal fade text-left\" id=\"scrollable-modal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"scrollableModalTitle\" aria-hidden=\"true\" style={{display: 'none'}}>\n                <div className=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"scrollableModalTitle\">{modal.type && modal.type}</h5>\n                        <button type=\"button\" onClick={toggleModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className='row'>\n                            {modal.content && modal.content.map(item => {\n                                return <WhoToFollowDetailComponent profile={item} key={item.user_id}/>\n                            })}\n                        </div>\n                    </div>\n                    </div>  {/* /.modal-content */}\n                </div>{/* /.modal-dialog */}\n                </div>\n            </div>\n\n    )\n}\n\nexport default ProfileHeaderComponent;","\nimport { useEffect, useState } from 'react';\nimport ProfileHeaderComponent from '../sections/profileHeader.component.js';\nimport TweetListComponent from '../sections/tweetList.component.js';\nimport WhoToFollowListComponent from '../sections/whoToFollowList.component.js';\nimport UserService from '../../services/user.service.js';\n\nfunction ProfileComponent(props) {\n  const [ following, setFollowing ] = useState();\n  const [ followers, setFollowers ] = useState();\n  const [ user, setUser ] = useState();\n  const [ userTweets, setUserTweets] = useState([]);\n\n  useEffect(() => {\n    if (props.username) {\n      UserService.getProfile(props.username).then(response => {\n        if (!response.error) {\n          setUser(response.data);\n          //  Fetch following list of the user\n          UserService.following(props.username).then(response => {\n            setFollowing(response.data);\n          });\n          // Fetch followers list of the user\n          UserService.followers(props.username).then(response => {\n            setFollowers(response.data);\n          });\n          // Fetch tweet list of a user\n          UserService.getTweets(props.username).then(res => {\n            if (!response.error) {\n                setUserTweets(res.data);\n            } else {\n              alert(JSON.stringify(res.message));\n            }\n          }).catch(error => {\n            alert(error);\n          });\n        } else {\n          alert(JSON.stringify(response.message));\n        } \n      }).catch(error => {\n        alert(error);\n      });\n    }\n  }, [props])\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-md-8\">\n          <ProfileHeaderComponent profile={user} following={following} followers={followers}/>\n          <TweetListComponent tweets={userTweets}/>\n      </div>\n      {/* Right sidebar */}\n      <div className=\"right-sidebar col-md-4\">\n        <WhoToFollowListComponent/>\n      </div>\n    </div>\n    )\n}\n\nexport default ProfileComponent;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport UserService from '../../services/user.service.js';\n\nfunction SettingsComponent(props) {\n  const { register, handleSubmit, setValue, errors } = useForm();\n  const [ submitted, setSubmitted ] = useState(false);\n  const mounted = useRef();\n\n  useEffect(() => {\n    if (!mounted.current) {\n      // Component did mount\n      updateForm();\n      mounted.current = true;\n      setSubmitted(false);\n    } else {\n      // Component did update\n    }\n  }, [submitted]);\n\n  const updateForm = () => {\n    UserService.me().then(response => {\n      if (!response.error) {\n        setValue('first_name', response.data['first_name']);\n        setValue('last_name', response.data['last_name']);\n        setValue('location', response.data['location']);\n        setValue('bio', response.data['bio']);\n      }\n    });\n  }\n\n  const onSubmit = data => {\n    const {first_name, last_name, location, bio} = data;\n    UserService.updateProfile(first_name, last_name, bio, location)\n    .then(() => {\n      updateForm();\n      setSubmitted(true);\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  return (\n    <div className=\"row p-4\">\n      <div className=\"col-lg-12 col-md-12 bg-white\">\n        <div className=\"p-3\">\n          <form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              {/* First name field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"first_name\">First Name</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"first_name\" \n                    name=\"first_name\"\n                    type=\"text\" \n                    placeholder={\"First Name\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your first name\"\n                      }})}/>\n                    {errors.first_name && errors.first_name.message &&\n                    <span className=\"text-danger\">{errors.first_name.message}</span>}\n                </div>\n              </div>\n              {/* Last Name Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"last_name\">Last Name</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"last_name\" \n                    name=\"last_name\"\n                    type=\"text\" \n                    placeholder={\"Last Name\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your last name\"\n                      }})}/>\n                    {errors.last_name && errors.last_name.message &&\n                    <span className=\"text-danger\">{errors.last_name.message}</span>}\n                </div>\n              </div>\n              {/* Location Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"location\">Location</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"location\" \n                    name=\"location\"\n                    type=\"text\" \n                    placeholder={\"Location\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your location\"\n                      }})}/>\n                    {errors.location && errors.location.message &&\n                    <span className=\"text-danger\">{errors.location.message}</span>}\n                </div>\n              </div>\n              {/* Bio Field */}\n              <div className=\"col-lg-12\">\n                <div className=\"form-group\">\n                  <label className=\"text-dark\" htmlFor=\"location\">Bio</label>\n                  <input \n                    className=\"form-control\" \n                    id=\"bio\" \n                    name=\"bio\"\n                    type=\"text\" \n                    placeholder={\"Bio\"}\n                    ref={register({ \n                      required: {\n                        value: true,\n                        message: \"Enter your biography\"\n                      }})}/>\n                    {errors.bio && errors.bio.message &&\n                    <span className=\"text-danger\">{errors.bio.message}</span>}\n                </div>\n              </div>\n              {/* Submit button section */}\n              <div className=\"col-lg-12 text-center mt-5\">\n                <button \n                  type=\"submit\" \n                  className=\"btn btn-block btn-dark\"\n                  disabled={submitted}>\n                    {(submitted && 'Saved') || 'Save'}\n              </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>      \n  )\n}\n\nexport default SettingsComponent;\n  ","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthService from '../../services/auth.service.js'\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n    const isAuthenticated = AuthService.isAuthenticated();\n    \n    return (\n        <Route {...rest} render={\n        props => {\n            if (isAuthenticated) {\n                return (<Redirect to={{pathname: '/home', state: {from: props.location}}}></Redirect>) \n            } else {\n                return (<Component {...rest} {...props} />)\n            } \n        }} />\n    )\n}\n\nexport default AuthRoute;","import { useEffect, useState } from 'react';\nimport UserService from '../../services/user.service.js';\n\nexport default function TopHeaderComponent(props) {\n    const [user, setUser] = useState();\n    \n    useEffect(() => {\n        UserService.me().then((response) => {\n            setUser(response.data);\n        })\n    }, [])\n\n    return (\n       <header className=\"topbar\" data-navbarbg=\"skin6\">\n            <nav className=\"navbar top-navbar navbar-expand-md\">\n                <div className=\"navbar-header\" data-logobg=\"skin6\">\n                {/* This is for the sidebar toggle which is visible on mobile only */}\n                <a className=\"nav-toggler waves-effect waves-light d-block d-md-none\" href=\"/\"><i className=\"ti-menu ti-close\" /></a>\n                        {/* Logo */}\n                        <div className=\"navbar-brand\">\n                    {/* Logo icon */}\n                    <a href=\"/\">\n                    <b className=\"logo-icon\">\n                        {/* Dark Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo icon */}\n                        <img src=\"../assets/images/logo-icon.png\" alt=\"homepage\" className=\"light-logo\" />\n                    </b>\n                    {/*End Logo icon */}\n                    {/* Logo text */}\n                    <span className=\"logo-text\">\n                        {/* dark Logo text */}\n                        <img src=\"../assets/images/logo-text.png\" alt=\"homepage\" className=\"dark-logo\" />\n                        {/* Light Logo text */}\n                        <img src=\"../assets/images/logo-light-text.png\" className=\"light-logo\" alt=\"homepage\" />\n                    </span>\n                    </a>\n                </div>\n                        {/* End Logo */}\n                        {/* Toggle which is visible on mobile only */}\n                        <a className=\"topbartoggler d-block d-md-none waves-effect waves-light\" href=\"/\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><i className=\"ti-more\" /></a>\n                </div>\n                    {/* End Logo */}\n                    <div className=\"navbar-collapse collapse\" id=\"navbarSupportedContent\">\n                        {/* toggle and nav items */}\n                        <ul className=\"navbar-nav float-left mr-auto ml-3 pl-1\">\n                            {/* Header title */}\n                            <li className=\"nav-item\">\n                                <h3 className=\"text-dark mx-3\" >{props.headerTitle}</h3>\n                            </li>\n                         </ul>\n                        {/* Right side toggle and nav items */}\n                        <ul className=\"navbar-nav float-right\">\n                            {/* Search */}\n                            <li className=\"nav-item d-none d-md-block\">\n                    <a className=\"nav-link\" href=\"/\">\n                        <form>\n                        <div className=\"customize-input\">\n                            <input className=\"form-control custom-shadow custom-radius border-0 bg-white\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <i className=\"form-control-icon\" data-feather=\"search\" />\n                        </div>\n                        </form>\n                    </a>\n                    </li>\n                            {/* User profile and search */}\n                            <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"/\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <img src=\"../assets/images/users/profile-pic.jpg\" alt=\"user\" className=\"rounded-circle\" width={40} />\n                        <span className=\"ml-2 d-none d-lg-inline-block\"><span className=\"text-dark\">{user && user.first_name}</span> <i data-feather=\"chevron-down\" className=\"svg-icon\" /></span>\n                    </a>\n                    <div className=\"dropdown-menu dropdown-menu-right user-dd animated flipInY\">\n                        <a className=\"dropdown-item\" href=\"/profile\"><i data-feather=\"user\" className=\"svg-icon mr-2 ml-1\" />My Profile</a>\n                        <a className=\"dropdown-item\" href=\"/settings\"><i data-feather=\"settings\" className=\"svg-icon mr-2 ml-1\" />Account Setting</a>\n                        <a className=\"dropdown-item\" href=\"/logout\"><i data-feather=\"power\" className=\"svg-icon mr-2 ml-1\" />Logout</a>\n                    </div>\n                    </li>\n                            {/* User profile and search */}\n                            </ul>\n                </div>\n            </nav>\n            </header>\n    )\n}","export default function LeftSidebarComponent() {\n\n    return (\n        <aside className=\"left-sidebar\" data-sidebarbg=\"skin6\">\n        {/* Sidebar scroll*/}\n            <div className=\"scroll-sidebar\" data-sidebarbg=\"skin6\">\n        {/* Sidebar navigation*/}\n            <nav className=\"sidebar-nav\">\n            <ul id=\"sidebarnav\">\n            <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href=\"/home\" aria-expanded=\"false\"><i data-feather=\"home\" className=\"feather-icon\" /><span className=\"hide-menu\">Home</span></a></li>\n            <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href=\"/profile\" aria-expanded=\"false\"><i data-feather=\"user\" className=\"feather-icon\" /><span className=\"hide-menu\">Profile</span></a></li>\n            <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href=\"/settings\" aria-expanded=\"false\"><i data-feather=\"settings\" className=\"feather-icon\" /><span className=\"hide-menu\">Settings</span></a></li>\n            <li className=\"sidebar-item\"> <a className=\"sidebar-link sidebar-link\" href=\"/logout\" aria-expanded=\"false\"><i data-feather=\"log-out\" className=\"feather-icon\" /><span className=\"hide-menu\">Logout</span></a></li>\n            </ul>\n        </nav>\n        {/* End Sidebar navigation */}\n            </div>\n        {/* End Sidebar scroll*/}\n        </aside>\n    )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthService from '../../services/auth.service.js'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isAuthenticated = AuthService.isAuthenticated();\n\n    return (\n        <Route {...rest} render={\n        props => {\n            if (isAuthenticated) {\n                return (<Component {...rest} {...props} />)\n            } else {\n                return (<Redirect to={{pathname: '/login', state: {from: props.location}}}></Redirect>)\n            } \n        }} />\n    )\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport TopHeaderComponent from './sections/topheader.component.js';\nimport LeftSidebarComponent from './sections/leftSidebar.component.js';\nimport PrivateRoute from './routes/privateRoute.component.js';\n\nconst MainWrapper = ({ component: Component, ...rest }) => {\n    return (\n        <div id=\"main-wrapper\" data-theme=\"light\" data-layout=\"vertical\" data-navbarbg=\"skin6\" data-sidebartype=\"full\" data-sidebar-position=\"fixed\" data-header-position=\"fixed\" data-boxed-layout=\"full\">\n              <TopHeaderComponent headerTitle={rest.title}/>\n              <LeftSidebarComponent />\n              {/* Page wrapper  */}\n              <div className=\"page-wrapper\">\n                  {/* <Route {...rest} render={\n                      props => {\n                        return (<Component {...rest} {...props} />)\n                      }\n                  }/> */}\n                  <PrivateRoute {...rest} component={Component} />\n              </div>\n             {/* End Page wrapper  */}\n        </div>\n    )\n}\n\nexport default MainWrapper;","import { Switch, Route, useHistory, useParams } from 'react-router-dom';\nimport Login from './components/login.component.js';\nimport Register from './components/register.component.js';\nimport Home from './components/page_contents/home.component.js';\nimport Profile from './components/page_contents/profile.component.js';\nimport Settings from './components/page_contents/settings.component.js';\nimport AuthRoute from './components/routes/authRoute.component.js';\nimport MainWrapper from './components/mainWrapper.component.js';\nimport AuthService from './services/auth.service.js';\n\nfunction App() {\n  const history = useHistory();\n  const user = AuthService.getCurrentUser();\n\n  const ProfileWrapper = () => {\n    const params = useParams();\n    if (params.username)\n      return <Profile username={params.username} />\n    return <Profile username={user.username} />\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          {/* <Route exact path={[\"/\", \"/home\"]} component={Home} /> */}\n          <AuthRoute path=\"/login\" component={Login} />\n          <Route path=\"/logout\" render={() => { \n            AuthService.logout();\n            history.push('/login')\n            }}/>\n          <AuthRoute path=\"/register\" component={Register} />\n          <MainWrapper exact path=\"/\" title=\"Home\" component={Home}/>\n          <MainWrapper path=\"/home\" title=\"Home\" component={Home}/>\n          <MainWrapper path=\"/profile/:username\" title=\"Profile\" component={ProfileWrapper}/>\n          <MainWrapper exact path=\"/profile\" title=\"Profile\" component={ProfileWrapper}/>\n          <MainWrapper path=\"/settings\" title=\"Settings\" component={Settings}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}